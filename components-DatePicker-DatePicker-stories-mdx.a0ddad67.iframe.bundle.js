"use strict";(globalThis.webpackChunk_lokalise_louis=globalThis.webpackChunk_lokalise_louis||[]).push([[71],{"./src/components/DatePicker/DatePicker.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Template:()=>Template,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DatePicker_stories,defaultStory:()=>defaultStory,disabledDays:()=>disabledDays,preselectedDate:()=>preselectedDate,withError:()=>withError});var react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),hooks=__webpack_require__("./node_modules/@storybook/addons/dist/esm/hooks.js"),Calendar=__webpack_require__("./src/foundations/icons/Calendar.tsx"),useLocalisation=__webpack_require__("./src/utils/hooks/useLocalisation.ts"),useErrorId=__webpack_require__("./src/utils/hooks/useErrorId.ts"),InlineDatePicker=__webpack_require__("./src/components/InlineDatePicker/InlineDatePicker.tsx"),InputErrorMessage=__webpack_require__("./src/components/InputErrorMessage/InputErrorMessage.tsx"),Popover=__webpack_require__("./src/components/Popover/Popover.tsx"),styles=__webpack_require__("./src/components/DatePicker/styles.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const DatePicker=_ref=>{let{name,value,disabledDays,onChange,error,inPortal=!1}=_ref;const[opened,setOpened]=(0,react.useState)(!1),{formatDate}=(0,useLocalisation.G)(),errorId=(0,useErrorId.P)();return(0,jsx_runtime.jsx)(Popover.J,{placement:"bottom-start",offset:1,inPortal,visibleCallback:setOpened,popoverContent:setVisible=>(0,jsx_runtime.jsx)(styles.sc,{children:(0,jsx_runtime.jsx)(InlineDatePicker.k,{disabledDays,showOutsideDays:!0,selectedDays:value,onDayClick:(day,modifiers)=>{modifiers.disabled||(onChange(day),setOpened(!1),setVisible(!1))}})}),children:(0,jsx_runtime.jsxs)(styles.W2,{children:[(0,jsx_runtime.jsxs)(styles.L9,{name,"aria-label":"Select Date",opened,children:[(0,jsx_runtime.jsx)("span",{children:value?formatDate(value,"PP"):(0,jsx_runtime.jsx)(styles.Vm,{children:"Select date..."})}),(0,jsx_runtime.jsx)(styles.a1,{children:(0,jsx_runtime.jsx)(Calendar.f,{size:"17px"})})]}),!!error&&"boolean"!=typeof error&&(0,jsx_runtime.jsx)(InputErrorMessage.f,{id:errorId,children:error})]})})};DatePicker.displayName="DatePicker";try{DatePicker.displayName="DatePicker",DatePicker.__docgenInfo={description:"",displayName:"DatePicker",props:{name:{defaultValue:null,description:"Sets the `name` attribute of the DatePicker button element.",name:"name",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Sets a preselected date in the input field.",name:"value",required:!1,type:{name:"Date"}},onChange:{defaultValue:null,description:"Function executed when a date is selected.",name:"onChange",required:!0,type:{name:"(date: Date) => void"}},disabledDays:{defaultValue:null,description:'Sets the day(s) that should appear as disabled using "matching days modifiers": https://react-day-picker-v7.netlify.app/api/DayPicker#disabledDays.',name:"disabledDays",required:!1,type:{name:"Modifier | Modifier[]"}},error:{defaultValue:null,description:"Renders a form validation `InputErrorMessage` when passed as `string | string[]`.",name:"error",required:!1,type:{name:"string | boolean | string[]"}},inPortal:{defaultValue:{value:"false"},description:"Toggles rendering in a portal container to prevent other elements from clipping or hiding the DatePicker popover.",name:"inPortal",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DatePicker/DatePicker.tsx#DatePicker"]={docgenInfo:DatePicker.__docgenInfo,name:"DatePicker",path:"src/components/DatePicker/DatePicker.tsx#DatePicker"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const Template=args=>{const{onChange,...rest}=args,[_,updateArgs]=(0,hooks.D8)();return(0,esm.kt)(DatePicker,_extends({onChange:selectedDate=>updateArgs({value:selectedDate})},rest,{mdxType:"DatePicker"}))};Template.displayName="Template";const layoutProps={Template};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Components/DatePicker",component:DatePicker,parameters:{controls:{sort:"requiredFirst"}},argTypes:{value:{control:{type:"date"}},error:{control:{type:"text"}}},mdxType:"Meta"}),(0,esm.kt)("h1",null,"DatePicker"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#overview"},"Overview")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#figma-design-file"},"Figma Design File")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#props"},"Props")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#examples"},"Examples"))),(0,esm.kt)("h2",{id:"overview"},"Overview"),(0,esm.kt)("p",null,"DatePicker is used to select a date from a calendar."),(0,esm.kt)("p",null,"DatePicker depends on:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{href:"https://react-day-picker-v7.netlify.app/docs/getting-started/",target:"_blank"},"react-day-picker")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{href:"https://github.com/date-fns/date-fns",target:"_blank"},"date-fns"))),(0,esm.kt)("h3",null,"Installation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @lokalise/louis\n")),(0,esm.kt)("h3",null,"Usage"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useState } from 'react';\nimport { DatePicker } from '@lokalise/louis';\n\nexport default () => {\n    const [date, setDate] = useState();\n    return <DatePicker value={date} onChange={setDate} />;\n};\n")),(0,esm.kt)("h2",{id:"figma-design-file"},"Figma Design File"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{href:"https://www.figma.com/file/zfCOLmZam4nrttG6IVzQyz/UI-Library?node-id=4032%3A28124",target:"_blank"},"Figma Source File | DatePicker"))),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.$4,{of:DatePicker,sort:"requiredFirst",mdxType:"ArgsTable"}),(0,esm.kt)("h2",{id:"examples"},"Examples"),(0,esm.kt)("p",null,(0,esm.kt)("em",{parentName:"p"},"Note: all examples use ",(0,esm.kt)("inlineCode",{parentName:"em"},"inPortal = true")," to ensure they display properly in Storybook, only use this prop when needed.")),(0,esm.kt)("h3",null,"Default"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Default",args:{inPortal:!0},mdxType:"Story"},Template.bind({}))),(0,esm.kt)("h3",null,"Preselected Date"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Preselected Date",args:{value:new Date("2025-01-01"),inPortal:!0},mdxType:"Story"},Template.bind({}))),(0,esm.kt)("h3",null,"Disabled Days"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Disabled Days",args:{value:new Date("2025-01-01"),disabledDays:{before:new Date},inPortal:!0},mdxType:"Story"},Template.bind({}))),(0,esm.kt)("h3",null,"With Error"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"With Error",args:{value:new Date("2025-01-01"),error:"Please select a valid date.",inPortal:!0},mdxType:"Story"},Template.bind({}))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const defaultStory=Template.bind({});defaultStory.storyName="Default",defaultStory.args={inPortal:!0},defaultStory.parameters={storySource:{source:"args => {\n  const {\n    onChange,\n    ...rest\n  } = args;\n  const [_, updateArgs] = useArgs(); // using Storybook useArgs instead of react useState to enable date controls in playground\n\n  const handleChange = selectedDate => updateArgs({\n    value: selectedDate\n  });\n\n  return <DatePicker onChange={handleChange} {...rest} />;\n}"}};const preselectedDate=Template.bind({});preselectedDate.storyName="Preselected Date",preselectedDate.args={value:new Date("2025-01-01"),inPortal:!0},preselectedDate.parameters={storySource:{source:"args => {\n  const {\n    onChange,\n    ...rest\n  } = args;\n  const [_, updateArgs] = useArgs(); // using Storybook useArgs instead of react useState to enable date controls in playground\n\n  const handleChange = selectedDate => updateArgs({\n    value: selectedDate\n  });\n\n  return <DatePicker onChange={handleChange} {...rest} />;\n}"}};const disabledDays=Template.bind({});disabledDays.storyName="Disabled Days",disabledDays.args={value:new Date("2025-01-01"),disabledDays:{before:new Date},inPortal:!0},disabledDays.parameters={storySource:{source:"args => {\n  const {\n    onChange,\n    ...rest\n  } = args;\n  const [_, updateArgs] = useArgs(); // using Storybook useArgs instead of react useState to enable date controls in playground\n\n  const handleChange = selectedDate => updateArgs({\n    value: selectedDate\n  });\n\n  return <DatePicker onChange={handleChange} {...rest} />;\n}"}};const withError=Template.bind({});withError.storyName="With Error",withError.args={value:new Date("2025-01-01"),error:"Please select a valid date.",inPortal:!0},withError.parameters={storySource:{source:"args => {\n  const {\n    onChange,\n    ...rest\n  } = args;\n  const [_, updateArgs] = useArgs(); // using Storybook useArgs instead of react useState to enable date controls in playground\n\n  const handleChange = selectedDate => updateArgs({\n    value: selectedDate\n  });\n\n  return <DatePicker onChange={handleChange} {...rest} />;\n}"}};const componentMeta={title:"Components/DatePicker",parameters:{controls:{sort:"requiredFirst"}},component:DatePicker,argTypes:{value:{control:{type:"date"}},error:{control:{type:"text"}}},includeStories:["defaultStory","preselectedDate","disabledDays","withError"]},mdxStoryNameToKey={Default:"defaultStory","Preselected Date":"preselectedDate","Disabled Days":"disabledDays","With Error":"withError"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const DatePicker_stories=componentMeta,__namedExportsOrder=["Template","defaultStory","preselectedDate","disabledDays","withError"]}}]);